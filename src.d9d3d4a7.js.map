{"version":3,"sources":["index.js"],"names":["startBtn","document","querySelector","screens","querySelectorAll","timeList","timeEl","board","colosr","time","score","startGame","setInterval","decreaseTime","createRandomCircle","setTime","finishGame","current","value","innerHTML","parentNode","classList","add","circle","createElement","size","getRandomNumber","width","height","getBoundingClientRect","x","y","color","getRandomColor","style","top","left","background","boxShadow","append","min","max","Math","round","random","index","floor","length","addEventListener","event","preventDefault","target","contains","parseInt","getAttribute","remove"],"mappings":";;;AA8FC,aA9FD,QAAA,oBAEA,MAAMA,EAAWC,SAASC,cAAc,UAClCC,EAAUF,SAASG,iBAAiB,WACpCC,EAAWJ,SAASC,cAAc,cAClCI,EAASL,SAASC,cAAc,SAChCK,EAAQN,SAASC,cAAc,UAC/BM,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF,IAAIC,EAAO,EACPC,EAAQ,EAuBZ,SAASC,IACPC,YAAYC,EAAc,KAC1BC,IACAC,EAAQN,GAGV,SAASI,IACHJ,GAAS,IAATA,EACFO,QACK,CACDC,IAAAA,IAAYR,EACZQ,EAAU,KACZA,MAAcA,KAEhBF,EAAQE,IAIZ,SAASF,EAAQG,GACfZ,EAAOa,gBAAkBD,IAG3B,SAASF,IACPV,EAAOc,WAAWC,UAAUC,IAAI,QAChCf,EAAMY,uDAAyDT,gBAGjE,SAASI,IACDS,MAAAA,EAAStB,SAASuB,cAAc,OAChCC,EAAOC,EAAgB,GAAI,KAC3B,MAAEC,EAAF,OAASC,GAAWrB,EAAMsB,wBAC1BC,EAAIJ,EAAgB,EAAGC,EAAQF,GAC/BM,EAAIL,EAAgB,EAAGE,EAASH,GAChCO,EAAQC,IAEdV,EAAOF,UAAUC,IAAI,UACrBC,EAAOW,MAAMP,SAAWF,MACxBF,EAAOW,MAAMN,UAAYH,MACzBF,EAAOW,MAAMC,OAASJ,MACtBR,EAAOW,MAAME,QAAUN,MACvBP,EAAOW,MAAMG,WAAaL,EAC1BT,EAAOW,MAAMI,qBAAuBN,eAAmBA,IAEvDzB,EAAMgC,OAAOhB,GAGf,SAASG,EAAgBc,EAAKC,GACrBC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,GAGlD,SAASP,IACDY,MAAAA,EAAQH,KAAKI,MAAMJ,KAAKE,SAAWpC,EAAOuC,QACzCvC,OAAAA,EAAOqC,GAzEhB7C,EAASgD,iBAAiB,QAASC,IACjCA,EAAMC,iBACN/C,EAAQ,GAAGkB,UAAUC,IAAI,QAG3BjB,EAAS2C,iBAAiB,QAASC,IAC7BA,EAAME,OAAO9B,UAAU+B,SAAS,cAClC3C,EAAO4C,SAASJ,EAAME,OAAOG,aAAa,cAC1CnD,EAAQ,GAAGkB,UAAUC,IAAI,MACzBX,OAIJJ,EAAMyC,iBAAiB,QAASC,IAC1BA,EAAME,OAAO9B,UAAU+B,SAAS,YAClC1C,GAAS,EACTuC,EAAME,OAAOI,SACbzC","file":"src.d9d3d4a7.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst startBtn = document.querySelector('#start');\nconst screens = document.querySelectorAll('.screen');\nconst timeList = document.querySelector('#time-list');\nconst timeEl = document.querySelector('#time');\nconst board = document.querySelector('#board');\nconst colosr = [\n  '#FF0000',\n  '#FF8000',\n  '#FFFF00',\n  '#80FF00',\n  '#00FF00',\n  '#00FF80',\n  '#00FFFF',\n  '#0080FF',\n];\nlet time = 0;\nlet score = 0;\n\nstartBtn.addEventListener('click', event => {\n  event.preventDefault();\n  screens[0].classList.add('up');\n});\n\ntimeList.addEventListener('click', event => {\n  if (event.target.classList.contains('time-btn')) {\n    time = parseInt(event.target.getAttribute('data-time'));\n    screens[1].classList.add('up');\n    startGame();\n  }\n});\n\nboard.addEventListener('click', event => {\n  if (event.target.classList.contains('circle')) {\n    score += 1;\n    event.target.remove();\n    createRandomCircle();\n  }\n});\n\nfunction startGame() {\n  setInterval(decreaseTime, 1000);\n  createRandomCircle();\n  setTime(time);\n}\n\nfunction decreaseTime() {\n  if (time === 0) {\n    finishGame();\n  } else {\n    let current = --time;\n    if (current < 10) {\n      current = `0${current}`;\n    }\n    setTime(current);\n  }\n}\n\nfunction setTime(value) {\n  timeEl.innerHTML = `00:${value}`;\n}\n\nfunction finishGame() {\n  timeEl.parentNode.classList.add('hide');\n  board.innerHTML = `<h1>The game score: <span class=\"primary\">${score}</span></h1>`;\n}\n\nfunction createRandomCircle() {\n  const circle = document.createElement('div');\n  const size = getRandomNumber(10, 60);\n  const { width, height } = board.getBoundingClientRect();\n  const x = getRandomNumber(0, width - size);\n  const y = getRandomNumber(0, height - size);\n  const color = getRandomColor();\n\n  circle.classList.add('circle');\n  circle.style.width = `${size}px`;\n  circle.style.height = `${size}px`;\n  circle.style.top = `${y}px`;\n  circle.style.left = `${x}px`;\n  circle.style.background = color;\n  circle.style.boxShadow = `0 0 2px ${color}, 0 0 10px ${color}`;\n\n  board.append(circle);\n}\n\nfunction getRandomNumber(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nfunction getRandomColor() {\n  const index = Math.floor(Math.random() * colosr.length);\n  return colosr[index];\n}\n"]}